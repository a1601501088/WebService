<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.1.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
          http://cxf.apache.org/jaxws
          http://cxf.apache.org/schemas/jaxws.xsd"
       default-autowire="byName">
    <!-- classes路径与lib中的都为 classpath：路径 -->
    <!-- 导入cxf的文件，都在 cxf-2.4.2.jar下 META-INF/cxf/ 路径下 -->
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml"/>

    <!-- 注解方法注入-->
    <context:component-scan base-package="only"/>


    <!--  *******************xml方式注入**************************************************
        <bean id="userService" class="only.service.impl.UserServiceImpl"/>

        <bean id="helloword" class="only.ws.impl.HelloWordImpl"
            p:us-ref="userService"
        />
    ********************************************************************* -->

    <!--  配置wsdl文档路径 -->
    <!--  http://localhost:8080/cxfspring/only
        提供webservice服务的两种方式：
         A. 直接提供WebService的类包 (不推荐)
         B. 设置为spring容器中的一个bean，bean前面加 #
    -->


    <!--   ******************A. 直接提供WebService的类包 (不推荐)******************
    <jaxws:endpoint
        implementor="only.ws.impl.HelloWordImpl"
        address="/only"
    >
    </jaxws:endpoint>
     -->

    <!-- B. 设置为spring容器中的一个bean，bean前面加 # (这里的bean用的Spring注解注入)-->
    <jaxws:endpoint
            implementor="#helloWord"
            address="/only"
    >
        <!-- 与Spring结合后,在服务器中添加In拦截器的方法(可添加多个) -->
        <jaxws:inInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingInInterceptor"/>
            <!-- 添加自定义 In拦截器 ,然后 客户端在 Out拦截器中添加信息 -->
            <bean class="only.auth.AuthInInterceptor" />

        </jaxws:inInterceptors>
    </jaxws:endpoint>
    <!--  ******************************************************************************************-->
</beans>